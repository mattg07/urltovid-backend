Name: text2speech
Description: Convert text to speech. 
Args: text: (required) The text to convert to speech.
Args: model: (optional) The name of the model to use. Default is "tts-1".
Args: voice: (optional) The voice to use. Default is "alloy".
Args: speed: (optional) The speed of the speech. Default is "1.0".
Args: response_format: (optional) The format of the response. Default is "mp3".
Args: output_file: (optional) The path to save the output file. Default is "speech".

#!/bin/bash

if [ -f .env ]; then
    export $(grep -v '^#' .env | xargs)
else
    echo ".env file not found. Please create a .env file with the necessary environment variables."
    exit 1
fi

textArg=${TEXT:-""}
modelArg=${MODEL:-"tts-1"}
voiceArg=${VOICE:-"alloy"}
speedArg=${SPEED:-"1.0"}
responseFormatArg=${RESPONSE_FORMAT:-"mp3"}
outputFileArg=${OUTPUT_FILE:-"speech"}

if [ -z "$OPENAI_API_KEY" ]; then
    echo "OPENAI_API_KEY is not set. Unable to create a speech. Please set the OPENAI_API_KEY as an environment variable."
    exit 1
fi

if [ -z "$textArg" ]; then
    echo "text argument is empty, but required. Unable to create a speech. Please provide the text arg."
    exit 1
fi

# Debugging statements
echo "Text: $textArg"
echo "Model: $modelArg"
echo "Voice: $voiceArg"
echo "Speed: $speedArg"
echo "Response Format: $responseFormatArg"
echo "Output File: $outputFileArg.$responseFormatArg"

response=$(curl -s -o "$outputFileArg.$responseFormatArg" -w "%{http_code}" https://api.openai.com/v1/audio/speech \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  -H "Content-Type: application/json" \
  -d '{
    "model": "'"$modelArg"'",
    "input": "'"$textArg"'",
    "voice": "'"$voiceArg"'",
    "speed": "'"$speedArg"'",
    "response_format": "'"$responseFormatArg"'"
  }')

# Check the HTTP status code
if [ "$response" -ne 200 ]; then
    echo "Error: Received HTTP status code $response from OpenAI API"
    cat "$outputFileArg.$responseFormatArg" # Display the response in case of error
    exit 1
fi

echo "Speech created successfully and saved to $outputFileArg.$responseFormatArg"